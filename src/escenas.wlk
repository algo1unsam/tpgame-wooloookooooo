import crearCosas.*
import bloques.*


//NIVEL 1
object nivel1 {
	
	method crearMapa() {
		
		//LADRILLOS
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+4,18)})
		3.times({t => creadorDeCosas.crear(new Ladrillo(),t+10,18)})	
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+4,17)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),1,t+14)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+3,16)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+20,15)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+5,13)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+4,11)})
		3.times({t => creadorDeCosas.crear(new Ladrillo(),t+20,6)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+4,5)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t,6)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t-1,3)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+5,3)})
		3.times({t => creadorDeCosas.crear(new Ladrillo(),2,t-1)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+18,2)})
		3.times({t => creadorDeCosas.crear(new Ladrillo(),14,t+4)})
		2.times({t => creadorDeCosas.crear(new Ladrillo(),0,t+17)})	
		2.times({t => creadorDeCosas.crear(new Ladrillo(),t+3,19)})	
		creadorDeCosas.crear(new Ladrillo(),19,18)
		creadorDeCosas.crear(new Ladrillo(),24,18)
		creadorDeCosas.crear(new Ladrillo(),11,19)
		creadorDeCosas.crear(new Ladrillo(),13,19)
		creadorDeCosas.crear(new Ladrillo(),17,19)
		creadorDeCosas.crear(new Ladrillo(),23,19)
		creadorDeCosas.crear(new Ladrillo(),17,16)
		creadorDeCosas.crear(new Ladrillo(),20,16)
		creadorDeCosas.crear(new Ladrillo(),23,16)
		creadorDeCosas.crear(new Ladrillo(),16,15)
		creadorDeCosas.crear(new Ladrillo(),10,14)
		creadorDeCosas.crear(new Ladrillo(),22,14)
		creadorDeCosas.crear(new Ladrillo(),13,13)
		creadorDeCosas.crear(new Ladrillo(),20,13)
		creadorDeCosas.crear(new Ladrillo(),23,13)
		creadorDeCosas.crear(new Ladrillo(),2,11)
		creadorDeCosas.crear(new Ladrillo(),14,11)
		creadorDeCosas.crear(new Ladrillo(),22,11)
		creadorDeCosas.crear(new Ladrillo(),0,10)
		creadorDeCosas.crear(new Ladrillo(),17,10)
		creadorDeCosas.crear(new Ladrillo(),12,8)
		creadorDeCosas.crear(new Ladrillo(),11,7)
		creadorDeCosas.crear(new Ladrillo(),23,5)
		creadorDeCosas.crear(new Ladrillo(),5,4)
		creadorDeCosas.crear(new Ladrillo(),7,4)
		creadorDeCosas.crear(new Ladrillo(),18,3)
		creadorDeCosas.crear(new Ladrillo(),20,3)
		creadorDeCosas.crear(new Ladrillo(),7,2)
		creadorDeCosas.crear(new Ladrillo(),9,2)
		creadorDeCosas.crear(new Ladrillo(),17,2)
		creadorDeCosas.crear(new Ladrillo(),10,1)
		creadorDeCosas.crear(new Ladrillo(),9,0)
		creadorDeCosas.crear(new Ladrillo(),16,0)
		
		//ARBUSTOS
		2.times({t => creadorDeCosas.crear(new Arbusto(),t+8,19)})
		2.times({t => creadorDeCosas.crear(new Arbusto(),t+8,18)})
		2.times({t => creadorDeCosas.crear(new Arbusto(),14,t+16)})
		2.times({t => creadorDeCosas.crear(new Arbusto(),t+8,17)})
		5.times({t => creadorDeCosas.crear(new Arbusto(),t+9,16)})
		2.times({t => creadorDeCosas.crear(new Arbusto(),t+9,11)})
		2.times({t => creadorDeCosas.crear(new Arbusto(),t+9,10)})
		9.times({t => creadorDeCosas.crear(new Arbusto(),t-1,8)})
		11.times({t => creadorDeCosas.crear(new Arbusto(),t+13,8)})
		4.times({t => creadorDeCosas.crear(new Arbusto(),16,t+3)})
		creadorDeCosas.crear(new Arbusto(),9,16)
		creadorDeCosas.crear(new Arbusto(),14,9)
		creadorDeCosas.crear(new Arbusto(),18,5)
		creadorDeCosas.crear(new Arbusto(),22,4)
		creadorDeCosas.crear(new Arbusto(),12,2)
		creadorDeCosas.crear(new Arbusto(),19,1)
		creadorDeCosas.crear(new Arbusto(),12,0)
		creadorDeCosas.crear(new Arbusto(),14,14)
		creadorDeCosas.crear(new Arbusto(),3,13)
		creadorDeCosas.crear(new Arbusto(),10,13)
		creadorDeCosas.crear(new Arbusto(),19,13)
		creadorDeCosas.crear(new Arbusto(),20,12)
		creadorDeCosas.crear(new Arbusto(),7,11)
		creadorDeCosas.crear(new Arbusto(),2,17)
		creadorDeCosas.crear(new Arbusto(),14,19)
		creadorDeCosas.crear(new Arbusto(),7,10)		
		
		//ACERO
		9.times({t => creadorDeCosas.crear(new Acero(),t+8,3)})
		10.times({t => creadorDeCosas.crear(new Acero(),t+8,12)})
		6.times({t => creadorDeCosas.crear(new Acero(),9,t+3)})
		4.times({t => creadorDeCosas.crear(new Acero(),15,t+15)})
		13.times({t => creadorDeCosas.crear(new Acero(),t+1,15)})
		2.times({t => creadorDeCosas.crear(new Acero(),t+17,15)})
		3.times({t => creadorDeCosas.crear(new Acero(),t+1,14)})
		2.times({t => creadorDeCosas.crear(new Acero(),18,t+12)})
		creadorDeCosas.crear(new Acero(),21,14)
		creadorDeCosas.crear(new Acero(),2,13)
		creadorDeCosas.crear(new Acero(),6,12)
		creadorDeCosas.crear(new Acero(),10,5)
		creadorDeCosas.crear(new Acero(),18,6)
		creadorDeCosas.crear(new Acero(),6,4)
		creadorDeCosas.crear(new Acero(),2,3)
		creadorDeCosas.crear(new Acero(),19,3)
		creadorDeCosas.crear(new Acero(),18,2)
		creadorDeCosas.crear(new Acero(),9,1)
		
		//AGUA:
		2.times({t=> creadorDeCosas.crear(new Agua(),7,t+16)})
		2.times({t=> creadorDeCosas.crear(new Agua(),t+1,18)})
		2.times({t=> creadorDeCosas.crear(new Agua(),21,t+15)})
		2.times({t=> creadorDeCosas.crear(new Agua(),3,t+10)})
		10.times({t=> creadorDeCosas.crear(new Agua(),t-1,9)})
		10.times({t=> creadorDeCosas.crear(new Agua(),t+14,9)})
		2.times({t=> creadorDeCosas.crear(new Agua(),t+10,6)})
		2.times({t=> creadorDeCosas.crear(new Agua(),21,t+1)})
		2.times({t=> creadorDeCosas.crear(new Agua(),4,t)})
		2.times({t=> creadorDeCosas.crear(new Agua(),t+12,1)})
		creadorDeCosas.crear(new Agua(),12,7)
		creadorDeCosas.crear(new Agua(),14,4)
		creadorDeCosas.crear(new Agua(),15,15)
		creadorDeCosas.crear(new Agua(),22,17)
		}
}

//GAME OVER
object gameOver {
	
	method crearMapa() {
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),1,t+1) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),1,t+13) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+1,14) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+1,18) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),4,t+1) } )
		2.times( { t => creadorDeCosas.crear(new Ladrillo(),4,t+14) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),7,t+3) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),7,t+13) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),10,t+13) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),11,t+3) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),13,t+13) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),14,t+1) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),17,t+13) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),20,t+1) } )
		5.times( { t => creadorDeCosas.crear(new Ladrillo(),20,t+13) } )
		2.times( { t => creadorDeCosas.crear(new Ladrillo(),22,t+2) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),23,t+3) } )
		2.times( { t => creadorDeCosas.crear(new Ladrillo(),t+1,2) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+14,2) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+14,4) } )
		2.times( { t => creadorDeCosas.crear(new Ladrillo(),t+1,6) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+14,6) } )  
		4.times( { t => creadorDeCosas.crear(new Ladrillo(),t+19,14) } )
		2.times( { t => creadorDeCosas.crear(new Ladrillo(),t+7,16) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+20,16) } )
		3.times( { t => creadorDeCosas.crear(new Ladrillo(),t+20,18) } ) 
		2.times( { t => creadorDeCosas.crear(new Ladrillo(),t+7,18) } ) 
 	 	2.times( { t => creadorDeCosas.crear(new Ladrillo(),t+20,6) } ) 
 	 	creadorDeCosas.crear(new Ladrillo(),14,17)
 	 	creadorDeCosas.crear(new Ladrillo(),16,17)
 	 	creadorDeCosas.crear(new Ladrillo(),3,16)
	   	creadorDeCosas.crear(new Ladrillo(),8,3)
		creadorDeCosas.crear(new Ladrillo(),9,2)	   
		creadorDeCosas.crear(new Ladrillo(),10,3)
	    creadorDeCosas.crear(new Ladrillo(),15,16)
		creadorDeCosas.crear(new Ladrillo(),21,4)    
		creadorDeCosas.crear(new Ladrillo(),23,2)
		}

}